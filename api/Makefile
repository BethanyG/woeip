.DEFAULT_GOAL := test

.PHONY: clean detect_missing_migrations help requirements test validate coverage quality production-requirements migrate static clean_static

# Generates a help message. Borrowed from https://github.com/pydanny/cookiecutter-djangopackage.
help: ## Display this help message
	@echo "Please use \`make <target>\` where <target> is one of"
	@perl -nle'print $& if m{^[\.a-zA-Z_-]+:.*?## .*$$}' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m  %-25s\033[0m %s\n", $$1, $$2}'

clean: ## Delete generated byte code and coverage reports
	find . -name '*.pyc' -delete
	coverage erase

requirements: ## Update requirements dependency files
	pip-compile requirements.in/dev.txt --output-file=requirements/dev.txt
	pip-compile requirements.in/prod.txt --output-file=requirements/prod.txt

test: clean ## Run tests and generate coverage report
	coverage run -m pytest --durations=25 -v
	coverage report -m

coverage: clean ## Run the coverage in xml format
	coverage run -m pytest --durations=25 -v
	coverage xml -o artifacts/coverage.xml

quality: ## Run pep8 and Pylint
	isort --check-only --recursive woeip/
	pycodestyle woeip *.py
	pylint --rcfile=pylintrc woeip *.py

validate: migrate quality test ## Run tests and quality checks

detect_missing_migrations:  ## Determine if any apps are missing generated migrations
	python manage.py makemigrations --check --dry-run || (echo "Migration files are missing. Please run the "makemigrations" management command, and commit the migrations." && false)

migrate: ## Apply database migrations
	python manage.py migrate --noinput
